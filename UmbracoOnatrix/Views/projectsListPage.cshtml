@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper;
@{
	Layout = "mainLayout.cshtml";
	ViewBag.Title = Model?.Value("pageTitle") ?? null;
	var rootContents = UmbracoHelper.ContentAtRoot();
    var settings = rootContents?.FirstOrDefault(x => x.ContentType.Alias == "settingsPage") ?? null;
    
	var letUsKnowImage = settings?.Value<IPublishedContent>("letUsKnowImage")?.Url() ?? "";

	var selection = Umbraco.Content(Guid.Parse("43542976-bcb2-4c75-aa94-04663812791c"))
    .ChildrenOfType("projectItemTemplate")
    .Where(x => x.IsVisible());

	var numberOfItems = selection.Count();

	var itemsPerPage = 4;
	if (!int.TryParse(Context.Request.Query["page"], out int currentPage))
		currentPage = 1;

	var totalItems = selection?.Count() ?? 0;
	var pagedItems = selection?.Skip((currentPage - 1) * itemsPerPage).Take(itemsPerPage);
}

@if (!string.IsNullOrEmpty(ViewBag.Title))
{
	@await Html.PartialAsync("partials/static/breadcrumb.cshtml")
}
<section id="our-projects" class="spacing-top spacing-bottom">
	<div class="container">
		<div class="proj-left">
			@if (pagedItems != null)
			{
				@foreach (var item in pagedItems) {
					var image = item?.Value<IPublishedContent>("thumbnailImage")?.Url() ?? "";
					var preamble = item?.Value<string>("preamble") ?? "";

					<a href="@item.Url()">
						<div class="proj-item">
							<img src="@image" alt="@item.Name()">
							<div class="proj-item-body">
								<h4>@item.Name()</h4>
								<p class="proj-date">
									@{
										var dateCreated = item.Value<DateTime>("dateCreated");
									}
									<i class="fa-light fa-calendar"></i> @dateCreated.ToString("MMMM dd yyyy")
								</p>
								<p>@preamble</p>
								<p class="faux-link">Read More <i class="fa-sharp fa-light fa-arrow-right"></i></p>
							</div>
						</div>
					</a>
				}
			}
			</div>
			<div class="proj-right">
			@await Html.PartialAsync("partials/static/projectTags.cshtml")
			@await Html.PartialAsync("partials/static/helpForm.cshtml")
			</div>
			@if (numberOfItems > 4) 
			{
					<section class="pagnation">
					<div class="container">

						@if (currentPage > 1)
						{
							<a href="?page=@(currentPage - 1)" class="change">PREV</a>
						}
						else
						{
							<span class="change inactive">PREV</span>
						}

						<ul class="pages">
						@for (int i = 1; i <= Math.Ceiling((decimal)totalItems / itemsPerPage); i++)
						{
							<li class="@((i == currentPage) ? "number active" : "number")">
								<a href="?page=@i">@i</a>
							</li>
						}
						</ul>
						@if (currentPage < Math.Ceiling((decimal)totalItems / itemsPerPage))
						{
							<a class="change" href="?page=@(currentPage + 1)">NEXT</a>
						}
						else
						{
							<span class="change inactive">NEXT</span>
						}
					</div>
				</section>
			}
		</div>
	</div>
</section>
<section class="let-us-know bg-gray">
    <div class="container">
        <img src="@letUsKnowImage" alt="Picture of man">
        <div class="luk-content">
            <h2>Let us know about your next project</h2>
            <div class="luk-item">
                <span><i class="fa-light fa-location-dot"></i>Office Location</span>
                <p>Klarabergsviadukten 90, 111 52 Stockholm</p>
            </div>
            <div class="luk-item">
                <span><i class="fa-light fa-phone-flip"></i>Phone number</span>
                <p>+46 8 123 456 75</p>
            </div>
            <div class="luk-item">
                <span><i class="fa-light fa-envelope"></i>Phone number</span>
                <p>sales@onatrix.com</p>
            </div>
        </div>
    </div>
</section>